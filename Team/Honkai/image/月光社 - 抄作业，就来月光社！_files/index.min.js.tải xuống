Array.prototype.removeEl = function (val) {
    var index = this.indexOf(val);
    if (index > -1) {
        this.splice(index, 1);
    }
};
var commonJs = {
    curPage: 1,
    d: function (a) {
        a || (a = location.href);
        var b, c, d = {}, e = a.split("?")[1];
        if (e) {
            e = e.split("#")[0],
                c = e.split("&");
            for (var f = 0; f < c.length; f++)
                b = c[f].split("="),
                    d[b[0]] = decodeURIComponent(b[1])
        }
        return d
    },
    loading1: function (flag) {
        if (!!flag) {
            $('html, body').addClass('overflow-class')
            return '<div class="mask-loading1"><div class="mask-loading1-spinner"><div class="mask-loading1-box__content"><span></span><span></span><span></span><span></span><span></span></div><p class="mask-loading1-text">拼命加载中</p></div></div>';
        } else {
            $('html, body').removeClass('overflow-class')
            $('mask-loading1').remove();
        }
    },
    render: function (tpl, domtpl, data) {
        console.log(tpl, domtpl, data)
        var getTpl = document.getElementById(tpl).innerHTML
            , view = document.querySelector(domtpl);
        laytpl(getTpl).render(data, function (html) {
            view.innerHTML = html;
        });
    },
    mCustomScrollbar: function (el, a) {
        $(el).mCustomScrollbar({
            theme: "minimal-dark",
            axis: "x",
            setLeft: !!a ? '' : '-60px',
        });
    },
    _doAjax: function (n, t, e, m) {
        return $.ajax({
            type: m || 'get',
            url: n,
            data: t,
            dataType: "json",
            success: function (n) {
                e && e(n)
            }
        })
    },
    ajaxError: function (n) {
        alert(n.msg)
    },
    article_search: function (url, data, page, pageSize, el) {
        var that = this;
        data.page = page;
        data.pageSize = pageSize;
        data.searchKey = that.d().sq;
        that.getData(url, data, el, '', '_js_article_search');
        $('#_js_article_input').val(that.d().sq)
        $('#_js_article_input').keyup(function (event) {
            if (event.keyCode == 13) {
                data.page = 1;
                data.searchKey = $(this).val();
                that.getData(url, data, el, '', '_js_article_search');
            }
        });
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el, '', '_js_article_search');
            }
        });

        this.c();
    },
    article_list_init: function (url, data, page, pageSize, el) {
        var that = this;
        that.c();
        data.page = page;
        data.pageSize = pageSize;
        console.log(document.querySelector(el))
        document.querySelector(el) && that.getData(url, data, el)
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });
    },
    article_init: function () {
        var that = this;
        that.c();
        var body = $('body');
        var offsetRight = $('.w1024').length > 0 && $('.w1024').offset().left;
        var offsetRightDom = offsetRight < 102 ? 0 : offsetRight - 108;
        offsetRight < 102 ? $('.art-nav-fixed').remove() : '';
        window.onscroll = function (e) {
            scrollTopA()
        }

        scrollTopA()

        function scrollTopA() {
            var sTop = document.documentElement.scrollTop || document.body.scrollTop;
            if (sTop > 458) {
                $('.art-nav-fixed').css({
                    "position": "fixed",
                    "left": offsetRightDom + "px",
                    "top": "30px",
                })
            } else {
                $('.art-nav-fixed').css({
                    "position": "absolute",
                    "left": "-106px",
                    "top": "0",
                })
            }
        }
    },
    c: function () {
        var offsetRight = $('.w1024').length > 0 && $('.w1024').offset().left;
        var offsetRightDom = offsetRight < 72 ? 0 : offsetRight - 66;
        var commonStyle = '';
        commonStyle = 'right:' + offsetRightDom + 'px';
        var commonHTML = '';
        commonHTML += '<div class="common-box-0" style="' + commonStyle + '">';
        commonHTML += '<a href="javascript:;" id="topNav" class="item-top" title="返回顶部"></a>';
        commonHTML += '<a href="/web/default/index" id="homeNav" class="item-home" title="返回主页"></a>';
        commonHTML += '</div>';
        var body = $('body');
        offsetRight < 48 ? $('.common-box-0').remove() : body.append(commonHTML);
        $('body').on('click', '#topNav', function () {
            $("html,body").animate({scrollTop: 0}, 500);
        })
    },
    teamAdd: function () {
        //strorage信息
        var storageKey = 'web_job_center_record';
        var storageLifetime = 30 * 24 * 3600;
        var record = getStorage(storageKey);
        if (!record) {
            record = {};
        }

        //select标签
        // var textLabelMap = ['_js_line_score', '_js_video_url', '_js_desc_text'];
        var selectLabelMap = ['_js_sel_id_2', '_js_sel_id_8', '_js_sel_id_14', '_js_sel_id_20'];

        //根据storage渲染页面
        renderByStorage();

        /**
         * 拿到storage就渲染页面
         */
        function renderByStorage() {
            if (!record) {
                return false;
            }
            for (var id in record) {
                if (id == '_js_changjing_a_0' || id == '_js_changjing_a_1') {
                    continue;
                }
                var param = $('#' + id);
                if (param.length <= 0) {  //若元素不存在，则删掉缓存
                    removeStorageEle(id);
                    continue;
                }
                if (selectLabelMap.indexOf(id) > -1) {  //下拉框逻辑
                    var toSelectOption = param.nextAll('select').find('option[value=' + record[id] + ']');
                    if (toSelectOption.length <= 0) {
                        continue;
                    }
                    toSelectOption.attr('selected', true).siblings().attr('selected', false);
                } else { //其他
                    param.val(record[id]);
                }
            }
        }


        var selme1 = '';
        var selme2 = '';
        var holy2 = '';
        var wea3 = '';
        // 选择场景
        $('.filter-box-1').selectFilter({
            callBack: function (val) {
                $('#_js_changjing_a_0').val(val);
                //删掉二级场景数据
                $('#_js_changjing_a_1').val('');
                $('.filter-box-2 .filter-text input').val('');

                fetchFloor();
            }
        });

        // 选择楼层
        function fetchFloor() {
            $.ajax({
                url: floorApi,
                dataType: 'json',
                data: {
                    type: $('#_js_changjing_a_0').val()
                },
                success: function (ret) {
                    var retData = ret.data;
                    $('.filter-box-2').unbind();
                    $('.filter-box-2 .filter-list').remove();
                    $('.filter-box-2 select').html('');
                    for (let i = 0; i < retData.length; i++) {
                        $('.filter-box-2 select').append('<option value="' + retData[i].id + '" ' + '>' + retData[i].name + '</option>')
                    }
                    $('.filter-box-2').selectFilter({
                        callBack: function (val) {
                            $('#_js_changjing_a_1').val(val);
                        }
                    });
                },
                error: function (error) {
                    console.log(error)
                }
            });
        }

        // 角色评级 队长
        $('._js_filer_4').selectFilter({
            callBack: function (val) {
                $('#_js_sel_id_2').val(val);
                saveStorageEle('_js_sel_id_2', val);
            }
        });
        // 角色评级 队员
        $('._js_filer_5').selectFilter({
            callBack: function (val) {
                $('#_js_sel_id_8').val(val);
                saveStorageEle('_js_sel_id_8', val);
            }
        });
        // 角色评级 队员
        $('._js_filer_6').selectFilter({
            callBack: function (val) {
                $('#_js_sel_id_14').val(val);
                saveStorageEle('_js_sel_id_14', val);
            }
        });
        // 人偶星级 人偶
        $('._js_filer_7').selectFilter({
            callBack: function (val) {
                $('#_js_sel_id_20').val(val);
                saveStorageEle('_js_sel_id_20', val);
            }
        });
        // modal 层
        var _getScrollbarWidth = function () {
            var t = document.createElement('div');
            t.className = "modal-scrollbar-measure";
            document.body.appendChild(t);
            var e = t.getBoundingClientRect().width - t.clientWidth;
            return document.body.removeChild(t), e;
        }

        function renderHTML(arr, classname) {
            var _html = '';
            $('.modal-body').html('');
            if (arr.length === 0) {
                return $('.modal-body').html('<p>搜索内容不存在</p>').show();
            }
            $.each(arr, function (index, item) {
                if (selme1 === 1) {
                    _html += '<div class="' + classname + ' modal-list-item" data-id="' + item.memberid + '" data-catid="' + item.catid + '" data-valkname="' + item.name + '">';
                } else {
                    _html += '<div class="' + classname + ' modal-list-item" data-id="' + item.id + '" data-valkname="' + item.name + '">';
                }

                _html += '<img src="' + item.url + '" alt=""><p>' + item.name + '</p></div>';
            })
            $('.modal-body').html(_html).show();
        }

        function renderHTMLB(arr) {
            var _html = '';
            $('.modal-body').html('');
            if (arr.length === 0) {
                return $('.modal-body').html('<p>搜索内容不存在</p>').show();
            }
            _html += '<div class="deal_s_box">';
            $.each(arr, function (i, item) {
                var icon = i == 0 ? "deal_zhandou_icon" : i == 1 ? "deal_tongyong_icon" : "deal_jiqiao_icon";
                _html += '<div class="' + icon + ' deal_s_icon"></div>';
                _html += '<div class="deal_s_list">';
                $.each(arr[i].child, function (j, list) {
                    _html += '<div class="deal_s_item" data-id=' + arr[i].child[j].id + ' data-name=' + arr[i].child[j].name + '><img src=' + arr[i].child[j].url + '><p>' + arr[i].child[j].name + '</p></div>'
                })
                _html += '</div>';
            })
            _html += '</div>';
            $('.modal-body').html(_html).show();
        }

        // 过滤
        function filterArrFn(arr, str) {
            var arrb = $.extend(true, [], arr);
            var results = str ? arrb.filter(function (item) {
                return item.name.indexOf(str) > -1
            }) : arrb;
            return results;
        }

        function filterArrFnA(arr, str) {
            var arrq = $.extend(true, [], arr);
            var arrqwa = [];
            var arrqw = [];
            $.each(arrq, function (index, item) {
                arrqw = item.child.filter(function (item2) {
                    return item2.name.indexOf(str) > -1
                });
                item.child = arrqw;
                arrqwa.push(item)
            })
            return arrqwa;
        }

        $('#modal-saerch-text').keyup(function (event) {
            if (event.keyCode == 13) {
                var filterStr = $.trim($(this).val());
                if (selme1 === 4) {
                    renderHTMLB(filterArrFnA(dearArr, filterStr));
                } else {
                    var filterArr = filterArrFn(selme1 === 1 ? roleArr : selme1 === 2 ? wuqiArr[wea3] : selme1 === 3 ? shengArr[holy2].child : talentArr, filterStr, 'name');
                    renderHTML(filterArr, selme1 === 1 ? 'team_add_selvalkyrie_item' : selme1 === 2 ? 'team_add_wuqi_item' : selme1 === 3 ? 'team_add_sheng_item' : 'team_add_tate_item')
                }
            }
        })

        //点击退出按钮触发事件
        $('.modal-close').on('click', function () {
            $('#modal-saerch-text').val('')
            modshaow();
        })

        //点击选择角色
        $('._js_choose_roles').on('click', function () {
            selme1 = 1;
            selme2 = $(this).data('selme');
            renderHTML(roleArr, 'team_add_selvalkyrie_item')
            createModal();
        });

        //点击选择武器
        $('._js_use_wea').on('click', function () {
            selme1 = 2;
            var weaSelmeArr = $(this).data('selme');
            selme2 = parseInt(weaSelmeArr.split(',')[0], 10);
            var wea2 = parseInt(weaSelmeArr.split(',')[1], 10);
            if ($('#_js_sel_id_' + wea2).val()) {
                wea3 = parseInt($('#_js_sel_id_' + wea2).val().split(',')[1], 10)
                var weaArr = wuqiArr[wea3] || [];
                renderHTML(weaArr, 'team_add_wuqi_item')
                createModal();
            } else {
                alert('请选择角色');
            }
        });

        //点击选择圣痕
        $('._js_holy_scar').on('click', function () {
            selme1 = 3;
            var holySelmeArr = $(this).data('selme');
            selme2 = parseInt(holySelmeArr.split(',')[0], 10);
            holy2 = parseInt(holySelmeArr.split(',')[1], 10);
            var weaArr = shengArr[holy2].child || [];
            renderHTML(weaArr, 'team_add_sheng_item')
            createModal();
        });

        //点击选择人偶
        $('._js_deal').on('click', function () {
            selme1 = 4;
            selme2 = $(this).data('selme');
            renderHTMLB(dearArr || [], 'team_add_deal_item')
            createModal();
        });

        //点击选择天赋
        $('._js_deal_1').on('click', function () {
            selme1 = 5;
            var taSelmeArr = $(this).data('selme');
            selme2 = parseInt(taSelmeArr.split(',')[0], 10);
            holy2 = taSelmeArr.split(',')[1];
            renderHTML(talentArr, 'team_add_tate_item')
            createModal();
        })

        //点击女武神图片、武器图片、圣痕图片、天赋图片触发事件
        $('#selvalkyrie_modal').on('click', '.modal-list-item', function () {
            var that = $(this);
            $('#modal-saerch-text').val('');
            $('#_js_sel_name_' + selme2).val(that.data('valkname'));
            var value;
            if (selme1 === 1) {
                value = that.data('id') + ',' + that.data('catid');
            } else {
                value = that.data('id')
            }
            $('#_js_sel_id_' + selme2).val(value);
            modshaow();
            //存储名字和值
            saveStorageEle('_js_sel_name_' + selme2, that.data('valkname'));
            saveStorageEle('_js_sel_id_' + selme2, value);
        });

        //点击人偶图片触发事件
        $('#selvalkyrie_modal').on('click', '.deal_s_item', function () {
            var that = $(this);
            $('#modal-saerch-text').val('');
            $('#_js_sel_name_' + selme2).val(that.data('name'));
            $('#_js_sel_id_' + selme2).val(that.data('id'));
            modshaow();
            //存储选项
            saveStorageEle('_js_sel_name_' + selme2, that.data('name'));
            saveStorageEle('_js_sel_id_' + selme2, that.data('id'));
        });

        function modshaow() {
            var that = $('#selvalkyrie_modal');
            that.removeClass('show');
            setTimeout(function () {
                that.removeAttr("style").css({"display": "none"});
                $('.modal-backdrop').remove();
                $('body').removeAttr('style').removeClass('modal-open');
                that.find('.modal-body').hide();
            }, 200)
        }

        function createModal() {
            $('body').append('<div class="modal-backdrop fade"></div>')
            $('.modal-backdrop').addClass('show');
            $('body').addClass('modal-open').css({"paddingRight": _getScrollbarWidth() + "px"})
            $('#selvalkyrie_modal').css({"paddingRight": _getScrollbarWidth() + "px", "display": "block"})
            setTimeout(function () {
                $('#selvalkyrie_modal').addClass('show')
            }, 200);
        }

        // 发布
        function a1model() {
            var _html = '';
            _html += '<div class="a1model"><div class="modelbox">';
            _html += '<div class="modeltext">感谢舰长推荐，您的阵容将在管理员审核通过后加入展示列表</div>'
            _html += '<div class="modelqd" id="_js_modelqd">确定</div>'
            _html += '</div></div>';
            $('body').append(_html);
            $('body').addClass('modal-open').css({"paddingRight": _getScrollbarWidth() + "px"})
            $('.a1model').css({"paddingRight": _getScrollbarWidth() + "px"})
        }

        $('body').on('click', '#_js_modelqd', function () {
            $('body').removeClass('modal-open')
            $('.a1model').remove();
            //跳转
            window.location.href = indexUrl;
        })
        $('#_js_release').on('click', function () {
            if ($("#custom_video_is_upload").val() == 'true') {
                alert('需要等待视频上传完成才可以提交');
                return;
            }
            //模式
            var type = Number($('#_type_id').val())
            var sceneId = Number($('#_js_changjing_a_0').val());
            var bossId = Number($('#_js_changjing_a_1').val());

            var disturb_width = $('input[name="disturb_width"]').val();
            var pass_time = $('input[name="pass_time"]').val();
            var score_lineup = $('input[name="score_lineup"]').val();
            var catSceneAbyss = Number($('input[name="catSceneAbyss_id"]').val());
            
            if (!sceneId && type === 1) {
                alert("场景不能为空");
                return false;
            }
            if (!bossId && type === 1) {
                alert("BOSS不能为空");
                return false;
            }
            if(!pass_time && type === 2 && catSceneAbyss!=3){
                alert("通关时间不能为空");
                return false;
            }
            if(!score_lineup && type === 2 && catSceneAbyss==3){
                alert("阵容分数不能为空");
                return false;
            }
            if(!disturb_width && type === 2){
                alert("扰动幅度不能为空");
                return false;
            }

            var vurl = $('#_js_video_url').val();
            if (vurl) {
                if (!!vurl.match(/script|alert|iframe/)) {
                    alert('您输入了非法字符串')
                    return false;
                } else if (!!vurl.match(/v.youku.com\/v_show\/id_/) ||
                    !!vurl.match(/v.qq.com\/x\/cover\//) ||
                    !!vurl.match(/bilibili.com\/video\//) ||
                    !!vurl.match(/b23.tv/)) {
                } else {
                    alert('请输入正确的B站、优酷、腾讯网站视频链接')
                    return false;
                }
            }

            var sel1M1 = $("#_js_sel_id_1").val();
            var sel1M3 = $("#_js_sel_id_3").val();
            var sel1M4 = $("#_js_sel_id_4").val();
            var sel1M5 = $("#_js_sel_id_5").val();
            var sel1M6 = $("#_js_sel_id_6").val();

            if (!parseInt(sel1M1)) {
                alert("队长角色不能为空");
                return false;
            }
            // if (!parseInt(sel1M3)) {
            //     alert("队长武器不能为空");
            //     return false;
            // }
            // if (!parseInt(sel1M4)) {
            //     alert("队长圣痕上位不能为空");
            //     return false;
            // }
            // if (!parseInt(sel1M5)) {
            //     alert("队长圣痕中位不能为空");
            //     return false;
            // }
            // if (!parseInt(sel1M6)) {
            //     alert("队长圣痕下位不能为空");
            //     return false;
            // }

            var miAgreeConfirm = $("#miAgreeConfirm").is(":checked");
            if (!miAgreeConfirm) {
                alert('确认并同意协议之后才可以提交');
                return;
            }

            var postData = {
                _csrf: $('input[name="_csrf"]').val(),
                scene_type: $('input[name="type_id"]').val(),
                disturb_width:$('input[name="disturb_width"]').val(),
                rank_id: $('input[name="rank_id"]').val(),
                weather_id: $('input[name="weather_id"]').val(),
                checkpoint_id: $('input[name="checkpoint_id"]').val(),
                pass_time: $('input[name="pass_time"]').val(),
                scene_id: $('input[name="scene_id"]').val(),
                layer_id: $('input[name="layer_id"]').val(),
                score_lineup: $('input[name="score_lineup"]').val(),
                url: $('input[name="url"]').val(),
                custom_video_url: $('input[name="custom_video_url"]').val(),
                intro: $('textarea[name="intro"]').val(),
                capt_valk_id: $('input[name="capt_valk_id"]').val(),
                capt_valk_data_catid: $('input[name="capt_valk_data_catid"]').val(),
                capt_arm_id: $('input[name="capt_arm_id"]').val(),
                capt_stig_hid: $('input[name="capt_stig_hid"]').val(),
                capt_stig_mid: $('input[name="capt_stig_mid"]').val(),
                capt_stig_fid: $('input[name="capt_stig_fid"]').val(),
                memo_valk_id: $('input[name="memo_valk_id"]').val(),
                memo_valk_data_catid: $('input[name="memo_valk_data_catid"]').val(),
                memo_arm_id: $('input[name="memo_arm_id"]').val(),
                memo_stig_hid: $('input[name="memo_stig_hid"]').val(),
                memo_stig_mid: $('input[name="memo_stig_mid"]').val(),
                memo_stig_fid: $('input[name="memo_stig_fid"]').val(),
                memt_valk_id: $('input[name="memt_valk_id"]').val(),
                memt_valk_data_catid: $('input[name="memt_valk_data_catid"]').val(),
                memt_arm_id: $('input[name="memt_arm_id"]').val(),
                memt_stig_hid: $('input[name="memt_stig_hid"]').val(),
                memt_stig_mid: $('input[name="memt_stig_mid"]').val(),
                memt_stig_fid: $('input[name="memt_stig_fid"]').val(),
                doll_id: $('input[name="doll_id"]').val(),
                doll_star: $('input[name="doll_star"]').val(),
            };
            console.log(postData);
            //提交
            $.ajax({
                url: doAddUrl,
                type: 'post',
                dataType: 'json',
                data: postData,
                success: function (data) {
                    if (data.status == 1) {
                        //提交之后立即删除storage
                        deleteStorage(storageKey);
                        //弹窗
                        a1model();
                    } else {
                        alert(data.msg);
                    }
                }
            })
        });

        //保存事件
        $("#_js_line_score,#_js_video_url,#_js_desc_text").on('blur', function () {
            var ele = $(this);
            saveStorageEle(ele.attr('id'), ele.val());
        });


        /**
         * 保存数据至key
         * @param id
         * @param value
         */
        function saveStorageEle(id, value) {
            record[id] = value;
            setStorage(storageKey, record, storageLifetime);
        }

        /**
         * 删除key
         * @param id
         */
        function removeStorageEle(id) {
            if (record.hasOwnProperty(id)) {
                delete record[id];
            }
            setStorage(storageKey, record, storageLifetime);
        }

    },
    stig_init: function (url, ell, ell2, el) {
        var that = this;
        el && that.mCustomScrollbar(el)
        that.c();
        $('#_js_stig_input').keyup(function (event) {
            if (event.keyCode == 13) {
                var obj = {};
                obj.name = $.trim($(this).val());
                if ($.trim($(this).val())) {
                    $.ajax({
                        url: url,
                        type: 'get',
                        dataType: 'json',
                        data: obj,
                        success: function (data) {
                            if (data.status === 1) {
                                if (data.data.length !== 0) {
                                    $(ell2).hide();
                                    $(ell).show();
                                    $(ell).addClass('item-0');
                                    that.render('tpl', ell, data.data);
                                } else {
                                    alert('没有搜到，请输出正确的圣痕名称')
                                }
                            } else {
                                alert('没有搜到，请输出正确的圣痕名称')
                            }
                        }
                    })
                } else {
                    $(ell2).show();
                    $(ell).hide();
                }

            }
        });
    },
    stig_details_init: function (url, data, page, pageSize, posid, el) {
        var that = this;
        $('body').append('<div id="tooltip0603"><div class="bd-tooltip">在所有同位圣痕中排在第<span></span>位</div></div>')
        $('.stig-table-2 em').each(function () {
            if ($(this).text() == 0) {
                $(this).hide();
            } else {
                $(this).html('#' + $(this).text())
            }
        });
        $('.stig-table-2 em').mouseover(function () {
            var value = $('#tooltip0603 span').html($(this).text().slice(1));
            if (value != 0) {
                var top = $(this)[0].getBoundingClientRect().top + (document.documentElement.scrollTop || document.body.scrollTop) - 50;
                var left = $(this)[0].getBoundingClientRect().right + (document.documentElement.scrollLeft || document.body.scrollLeft) - 100;
                $('#tooltip0603 .bd-tooltip').css({"left": left, "top": top});
                $('#tooltip0603').show();
            }
        }).mouseout(function () {
            $('#tooltip0603').hide();
        });
        data.page = page;
        data.pageSize = pageSize;
        // data.type = 1;
        data.posid = posid;
        data.pos_entity_id = that.getQueryVariable('id');
        document.querySelector(el) && that.getData(url, data, el)
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });
    },
    valk_details_init: function (url, data, page, pageSize, posid, el) {
        var that = this;
        data.page = page;
        data.pageSize = pageSize;
        data.type = 1;
        data.posid = posid;
        data.pos_entity_id = that.getQueryVariable('id');
        document.querySelector(el) && that.getData(url, data, el)
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });
    },
    valk_init: function (el, a, url, data, page, pageSize, ell) {
        var that = this;
        that.c();
        data.page = page;
        data.pageSize = pageSize;
        console.log(ell, el)
        document.querySelector(ell) && that.getData(url, data, ell, function () {
            that.mCustomScrollbar(el, a)
        })
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, ell, function () {
                    that.mCustomScrollbar(el, a)
                });
            }
        });

    },
    arms_details_init: function (url, data, page, pageSize, posid, el) {
        var that = this;
        data.page = page;
        data.pageSize = pageSize;
        data.type = 1;
        data.posid = posid;
        data.pos_entity_id = that.getQueryVariable('id');
        document.querySelector(el) && that.getData(url, data, el)
        $('.arms-detals-tab a').on('click', function () {
            $(this).addClass('on').siblings().removeClass('on');
            var _eq = $(this).index();
            $('.arms-details-tab-box .tab-box').hide().eq(_eq).show();
        });
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });
        that.c();
    },
    arms_init: function (url, data, page, pageSize, el) {
        var that = this;
        data.page = page;
        data.pageSize = pageSize;
        that.getData(url, data, el);
        $('.arms-tab-list a').on('click', function () {
            $('.arms-tab-list .line-item > a').removeClass('on');
            $(this).addClass('on');
            var type = $(this).data('type');
            data.type = type;
            data.page = 1;
            that.getData(url, data, el);
        });
        $('.weapon_search_ipt').keyup(function (event) {
            if (event.keyCode == 13) {
                $('.arms-tab-list a').removeClass('on');
                data.page = 1;
                data.searchKey = $(this).val();
                that.getData(url, data, el, '', 'armsinitS');
            }
        });
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });

        this.c();
    },
    home: function (el) {
        this.mCustomScrollbar(el)
        this.c()
    },
    // 我的舰团推荐
    init_fleet: function (url) {
        var that = this;
        var type; // 战舰招募 type
        // 初始值
        !!$('#_js_img').attr('src') ? $('.upload-box-item0').hide() : $('.upload-box-item0').show();
        // 点击图片上传
        $('#_js_file_upload').change(function (e) {
            var file = e.target.files && e.target.files[0];
            if (!(/^image\/.*$/i.test(file.type))) {
                alert('请上传正确格式图片');
                return; //不是图片 就跳出这一次循环
            }
            //实例化FileReader API
            var freader = new FileReader();
            freader.readAsDataURL(file);
            freader.onload = function (e) {
                if (!$('.upload-box-item0').is(':hidden')) {
                    $('.upload-box-item0').hide()
                }
                $('#_js_img').attr('src', e.target.result);
            }
        })
        // 用户点击区服
        $('.modal-district').on('click', 'li', function () {
            var districtVal = $(this).data('district');
            var districtValF = districtVal.split(",")[1];
            $('#_js_district').attr('data-district-msg', districtVal).find('span').html(districtValF);
            $('.modal-district').hide();
        });
        $('#_js_district').hover(function () {
            $('.modal-district').show();
        }, function () {
            $('.modal-district').hide();
        })
        // 用户预览
        $('#_js_preview').on('click', function () {
            var _data = that.fleetCmDistrict();
            var iframeElement = $("#_js_iframe");
            console.log(_data)
            try {
                if (_data) {
                    var sessionStorageiframeHtml = sessionStorage.setItem('sessionStorageiframeHtml', JSON.stringify(that.fleetCmDistrict()));
                    var iframeDoc = iframeElement.contents().find('html').html();
                    var codeWin = window.open();
                    codeWin.document.write(iframeDoc);
                    codeWin.document.close();
                    console.log(sessionStorageiframeHtml, iframeDoc, codeWin)
                }
            } catch (err) {
                console.log(err)
                alert('换chrome浏览器吧')
            }
        });

        // 用户提交
        function calculateLayout() {
            var _data = that.fleetCmDistrict();
            if (true) {
                $('body,html').css('overflow', 'hidden');
                $('body').append(that.loading1(true));
                that._doAjax(url, _data, function (req) {
                    if (req.code === 1) {
                        $('.mask-loading').find('.mask-loading-box__content').html('提交成功');
                        $('.mask-loading').find('.mask-loading-box__btns').show();
                        $('body').append(that.loading1());
                        $('body').on('click', '.mask-loading-box__btns a', function () {
                            window.location.href = "./fleet-list.html"
                        })
                    } else {
                        $('body').append(that.loading1());
                        alert(req.msg)
                    }
                }, 'post')
            }
        }

        $('#_js_release').on('click', _.debounce(calculateLayout, 3000, {leading: true}));
        that.c();
    },
    /*舰团js*/
    fleetCmDistrict: function () {
        var pattern = new RegExp("[~'!@#$%^&*()-+_=:]");
        var headline = $.trim($('#headline').val());
        var districtS = $('#_js_district').data('district-msg').split(',')[1];
        var shipName = $.trim($('#shipName').val());
        var shipId = $.trim($('#shipId').val());
        var qqId = $.trim($('#qqId').val());
        var detMsg = $.trim($('#detMsg').val());
        var imgPic = $('#_js_img').attr('src');
        if (!!headline) {
            if (pattern.test(headline)) {
                alert('标题非法输入');
                return
            }
        } else {
            alert('创建标题不能为空');
            return
        }
        if (!!shipName) {
            if (pattern.test(shipName)) {
                alert('舰团名称非法输入');
                return
            }
        } else {
            alert('舰团名称不能为空');
            return
        }
        if (!!shipId) {
            if (pattern.test(shipId)) {
                alert('舰团ID非法输入');
                return
            }
            if (!shipId.match(/[0-9]{4,}/g)) {
                alert('舰团ID非法输入');
                return
            }
        } else {
            alert('舰团ID不能为空');
            return
        }
        if (!!qqId) {
            if (pattern.test(qqId)) {
                alert('QQ群号非法输入');
                return
            }
            if (!qqId.match(/[0-9]{4,}/g)) {
                alert('QQ群号非法输入');
                return
            }
        } else {
            alert('QQ群号不能为空');
            return
        }
        if (!!detMsg) {
            if (pattern.test(detMsg)) {
                alert('详情内容非法输入');
                return
            }
        } else {
            alert('详情内容不能为空');
            return
        }
        return {
            username: '我就不告诉你', // 用户名
            portrait: '../img/yuanliang@1x.png', // 头像 需要后端返回
            temporary: Date.now(),
            headline: headline,
            districtS: districtS,
            shipName: shipName,
            shipId: shipId,
            qqId: qqId,
            detMsg: detMsg,
            imgPic: imgPic,
        }
    },

    init_fleet_list: function (url, page, pageSize, el) {
        // 舰团列表页
        var that = this;
        var fleetListType = $('.MD-fleet-list-sel a.item-0');
        var type;
        type = $('.MD-fleet-list-sel a.item-0.on').data('type');
        var data = {
            page: page,
            pageSize: pageSize,
            type: type,
        }
        fleetListType.on('click', function () {
            fleetListType.removeClass('on');
            $(this).addClass('on');
            type = $(this).data('type');
            var data = {
                page: 1,
                pageSize: pageSize,
                type: type,
            }
            that.getData(url, data, el)
        });
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });
        that.getData(url, data, el);
        that.c();
    },
    team_recommen_new: function (url, page, pageSize, el, oldurl) {

        //storage的key和过期时间
        var storageLifetime = 30 * 24 * 3600;
        var storageKey = 'web_job_center_state';

        // 选择战场
        // $('#_js_select_z1').selectFilter({
        //     callBack: function (val) {
        //         var title = $('#_js_select_z1 li.filter-selected a').attr('title');
        //         if (title === '无尽深渊') {
        //             window.location.href = oldurl
        //         }
        //     }
        // });

        //拿存储的筛选条件和排序条件
        var isStorageWarzonea = false;
        var warzonea = null;
        var strongenemy = null;
        var inclgoddwar = null;
        var sort = null;
        var state = getStorage(storageKey);
        if (state != null) {
            if (state.hasOwnProperty('warzonea')) {
                warzonea = state.warzonea;
                isStorageWarzonea = true;
            }
            if (state.hasOwnProperty('strongenemy')) {
                strongenemy = state.strongenemy;
            }
            if (state.hasOwnProperty('inclgoddwar')) {
                inclgoddwar = state.inclgoddwar;
            }
            if (state.hasOwnProperty('sort')) {
                sort = state.sort;
            }
        }

        //初始化战区模块
        var _warzonehtml = '';
        $.each(warzone, function (index, item) {
            var liClass = '';
            if (warzonea && warzonea == item.id) {
                liClass = ' class=select ';
            }
            _warzonehtml += '<li data-qid=' + item.id + liClass + '><i></i>' + item.value + '</li>';
        });
        $('#_js_table_s_c_1 ul').html(_warzonehtml);
        //初始化战区数据
        if (!warzonea) {
            var warzonea = $('#_js_table_s_c_1 li').eq(0).data('qid') || 1;
        }

        //初始化强敌数据
        if (!strongenemy) {
            strongenemy = {};
        }
        $.each(warzone, function (index, item) {
            if (!(item.id in strongenemy)) {
                strongenemy[item.id] = [];
            }
        });
        $.each(stromy, function (index, item) {
            if (strongenemy[index]) {
                $.each(item, function (index1, item1) {
                    if (strongenemy[index].indexOf(Number(item1.id)) > -1) {
                        item1.on = true;
                    }
                });
            }
        });
        //初始化强敌模块
        red2a(stromy[warzonea]);

        //初始化女武神数据
        if (!inclgoddwar) {
            inclgoddwar = [];
        }
        //初始化女武神模块
        var _goodwarhtml = '';
        $.each(goodwar, function (index1, item) {
            _goodwarhtml += '<div class="table-s-d-2"><div class="table-s-d-3">' + item.name + '</div><ul>';
            $.each(item.child, function (index2, list) {
                var liClass = inclgoddwar.indexOf(Number(list.id)) > -1 ? ' class=select ' : '';
                _goodwarhtml += '<li data-wid=' + list.id + liClass + '><i></i>' + list.value + '</li>';
            });
            _goodwarhtml += '</ul></div>';
        });
        $('#_js_table_s_d_1').html(_goodwarhtml);

        //初始化排序方式
        var order = [6, 'desc'];
        if (sort && sort.indexOf('+') > -1) {
            var sortArr = sort.split('+');
            order = [sortArr[0], sortArr[1]];
        }

        /**
         * 渲染强敌模块的数据
         * @param arr
         */
        function red2a(arr) {
            var _stromyhtml = '';
            $.each(arr, function (index, item) {
                var on = item.on ? 'select' : '';
                _stromyhtml += '<li data-qid=' + item.id + ' class=' + on + '><i></i>' + item.value + '</li>';
            });
            $('#_js_table_s_c ul').html(_stromyhtml);
        }

        /**
         * 点击战区之后的效果
         */
        $('#_js_table_s_c_1').on('click', 'li', function () {
            $(this).addClass('select').siblings().removeClass('select');
            warzonea = $(this).data('qid');
            //更换展示的强敌数据
            red2a(stromy[warzonea]);
            //刷新下方阵容数据
            paramCb(3);

            updateStorage('warzonea');
        });

        /**
         * 点击强敌之后的效果
         */
        $('#_js_table_s_c').on('click', 'li', function () {
            var that = $(this);
            if (!strongenemy[warzonea]) {
                strongenemy[warzonea] = [];
            }
            if (that.hasClass('select')) {
                that.removeClass('select');
                $.each(stromy[warzonea], function (index, item) {
                    if (item.id == that.data('qid')) {
                        item.on = false;
                    }
                });
                var pos = strongenemy[warzonea].indexOf(that.data('qid'));
                if (pos > -1) {
                    strongenemy[warzonea].splice(pos, 1);
                }
            } else {
                $.each(stromy[warzonea], function (index, item) {
                    if (item.id == that.data('qid')) {
                        item.on = true;
                    }
                });
                that.addClass('select');
                strongenemy[warzonea].push(that.data('qid'));
            }
            paramCb(1);

            updateStorage('strongenemy');
        })

        /**
         * 点击女武神之后的效果
         */
        $('#_js_table_s_d_1').on('click', ' li', function () {
            if ($(this).hasClass('select')) {
                $(this).removeClass('select');
                inclgoddwar.splice(inclgoddwar.indexOf($(this).data('wid')), 1);
            } else {
                $(this).addClass('select');
                inclgoddwar.push($(this).data('wid'));
            }
            paramCb(2);

            updateStorage('inclgoddwar');
        });

        function updateStorage(type) {
            if (!state) {
                state = {};
            }
            if (type == 'warzonea') {
                state['warzonea'] = warzonea;
            } else if (type == 'strongenemy') {
                state['strongenemy'] = strongenemy;
            } else if (type == 'inclgoddwar') {
                state['inclgoddwar'] = inclgoddwar;
            } else if (type == 'sort') {
                state['sort'] = sort;
            }
            setStorage(storageKey, state, storageLifetime);
        }

        function urlSearchParamsCopy(urlstr, key, value) {
            var href_url = urlstr;
            var href_url_one = href_url.split('?')[0];
            var href_url_two = href_url.split('?')[1];
            var href_url_arr = href_url_two.split('&');
            var href_url_obj = {}
            for (var i = 0; i < href_url_arr.length; i++) {
                href_url_obj[href_url_arr[i].split('=')[0]] = href_url_arr[i].split('=')[1]
            }
            href_url_obj[key] = value;
            var href_url_arr_new = [];
            for (var j in href_url_obj) {
                href_url_arr_new.push(j + '=' + href_url_obj[j])
            }
            return href_url_one + '?' + href_url_arr_new.join('&');
        }


        function paramCb(type) {
            var newurl = '';
            var strong = '';
            if (type === 1) {
                strong = strongenemy[warzonea].join(',');
                console.log(strong);
                newurl = urlSearchParamsCopy(table.ajax.url(), 'strong', strong);
            } else if (type === 2) {
                var war = inclgoddwar.join(',');
                console.log(table.ajax.url());
                console.log(war);
                newurl = urlSearchParamsCopy(table.ajax.url(), 'war', war);
            } else if (type == 3) {
                var strong = strongenemy[warzonea].join(',');
                newurl = urlSearchParamsCopy(table.ajax.url(), 'strong', strong);
                console.log(warzonea);
                newurl = urlSearchParamsCopy(newurl, 'scene', warzonea);
            }
            console.log(newurl);
            table.ajax.url(newurl).load();
        }

        //初次进入页面时需要传这些参数
        url = url + '?jumpfrom=pc';
        var firstParams = {};
        if (isStorageWarzonea) {
            url = url + '&scene=' + warzonea;
        }
        if (strongenemy && strongenemy[warzonea]) {
            url = url + '&strong=' + strongenemy[warzonea].join(',');
        }
        if (inclgoddwar) {
            url = url + '&war=' + inclgoddwar.join(',');
        }

        $('#ct_det1 tbody').on('click', 'tr', function () {
            var urlstr = $(this).find('.tgcol0').data('url');
            if (urlstr != undefined) {
                window.open(urlstr);
                // window.location.href = urlstr;
            }
        });
        $('#ct_det2 tbody').on('click', 'tr', function () {
            var urlstr = $(this).find('.tgcol0').data('url');
            if (urlstr != undefined) {
                window.open(urlstr);
                // window.location.href = urlstr;
            }
        });
        function createTable(type) {
            var columnDefs = [];
            
            var columnDefs1 = [
                {
                    "targets": 0,
                    "orderable": false,
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol0" data-url=' + row.info_url + '><img src=' + row.info_scene + '></div>';
                    }
                },
                {
                    "targets": 1,
                    "orderable": false,
                    "render": function (data, type, row, meta) {
                        var _htmlcol1 = '';
                        _htmlcol1 += '<div class="tgcol1">';
                        row.info_team01 ?
                            _htmlcol1 += '<div><img src=' + row.info_team01 + '><i class="level-ico level-'+row.info_team01_level+'"></i></div>' : '';
                        row.info_team02 ?
                            _htmlcol1 += '<div  style="margin-left:-10px;"><img src=' + row.info_team02 + '><i class="level-ico level-'+row.info_team02_level+'"></i></div>' : '';
                        row.info_team03 ?
                            _htmlcol1 += '<div style="margin-left:-10px;"><img src=' + row.info_team03 + '><i class="level-ico level-'+row.info_team03_level+'"></i></div>' : '';
                        _htmlcol1 += '<div>';
                        return _htmlcol1;
                    }
                },
                {
                    "targets": 2,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        // return '<div class="tgcol2">' + row.info_pass_time + '</div>'
                        if(app.typeId.id === '1' || (app.typeId.id === '2' && app.checkpoint.area_id == '3')){
                            return '<div class="tgcol2">' + row.info_score + '</div>'
                        }
                        if(app.typeId.id === '2' && app.checkpoint.area_id != '3'){
                            return '<div class="tgcol2">' + row.info_pass_time + '</div>'
                        }
                    }
                },
                {
                    "targets": 3,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol3"><div style="width:' + row.info_cost + '%"></div></div>'
                       
                        
                    }
                },
                {
                    "targets": 4,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol4"><div style="width:' + row.info_op_diff + '%"></div></div>'
                    }
                },
                {
                    "targets": 5,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol5"><i></i>' + row.good_reviews + '</div>'
                    }
                },
                {
                    "targets": 6,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol6">' + row.create_time + '</div>'
                    }
                }
                
                
            ];
            var columnDefs2 = [
                {
                    "targets": 0,
                    "orderable": false,
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol0" data-url=' + row.info_url + '><img src=' + row.info_scene + '></div>';
                    }
                },
                {
                    "targets": 1,
                    "orderable": false,
                    "render": function (data, type, row, meta) {
                        var _htmlcol1 = '';
                        _htmlcol1 += '<div class="tgcol1">';
                        row.info_team01 ?
                            _htmlcol1 += '<div><img src=' + row.info_team01 + '><i class="level-ico level-'+row.info_team01_level+'"></i></div>' : '';
                        row.info_team02 ?
                            _htmlcol1 += '<div  style="margin-left:-10px;"><img src=' + row.info_team02 + '><i class="level-ico level-'+row.info_team02_level+'"></i></div>' : '';
                        row.info_team03 ?
                            _htmlcol1 += '<div style="margin-left:-10px;"><img src=' + row.info_team03 + '><i class="level-ico level-'+row.info_team03_level+'"></i></div>' : '';
                        _htmlcol1 += '<div>';
                        return _htmlcol1;
                    }
                },
                {
                    "targets": 2,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        // return '<div class="tgcol2">' + row.info_pass_time + '</div>'
                        if(app.typeId.id === '1' || (app.typeId.id === '2' && app.checkpoint.area_id == '3')){
                            return '<div class="tgcol2">' + row.info_score + '</div>'
                        }
                        if(app.typeId.id === '2' && app.checkpoint.area_id != '3'){
                            return '<div class="tgcol2">' + row.info_pass_time + '</div>'
                        }
                    }
                },
                {
                    "targets": 3,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol2 disturb">' + row.info_disturb_width + '</div>'
                    }
                },
                {
                    "targets": 4,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol3"><div style="width:' + row.info_cost + '%"></div></div>'
                       
                        
                    }
                },
                {
                    "targets": 5,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol4"><div style="width:' + row.info_op_diff + '%"></div></div>'
                    }
                },
                
                {
                    "targets": 6,
                    "orderSequence": ["desc", "asc"],
                    "render": function (data, type, row, meta) {
                        return '<div class="tgcol6">' + row.create_time + '</div>'
                    }
                }
                
                
            ];
            if(type=='2'){
                columnDefs = columnDefs2;
            }else {
                columnDefs = columnDefs1;
            }
            var temp = $(`#ct_det${type}`).DataTable({
                "serverSide": true,
                'info': false,
                "pagingType": "full_numbers",
                // 'paging':false,
                "lengthChange": false, // 分页长度
                "searching": false, // 搜索
                'processing': true,
                'serverSide': true,
                "deferRender": true,
                "pageLength": 50,
                "language": {
                    "sProcessing": "<span>处理中...</span>",
                    "sLengthMenu": "显示 _MENU_ 项结果",
                    "sZeroRecords": "没有匹配结果",
                    "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                    "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
                    "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
                    "sInfoPostFix": "",
                    "sSearch": "搜索:",
                    "sUrl": "",
                    "sEmptyTable": "没有搜索到合适的结果……大概是被律化娜丢进虚空里了",
                    "sLoadingRecords": "载入中...",
                    "sInfoThousands": ",",
                    "oPaginate": {
                        "sFirst": "首页",
                        "sPrevious": "上一页",
                        "sNext": "下一页",
                        "sLast": "末页"
                    },
                    "oAria": {
                        "sSortAscending": ": 以升序排列此列",
                        "sSortDescending": ": 以降序排列此列"
                    }
                },
                'ajax': {
                    'url': url,
                    'dataFilter': function (data) {
                        // 修改成dataTables需要的形式
                        var json = jQuery.parseJSON(data);
                        if (json.status === 1) {
                            json.recordsTotal = +json.total;
                            json.recordsFiltered = +json.total;
                            json.data = json.data;
                        }
                        return JSON.stringify(json); // return JSON string
                    },
                    "data": function (d) {
                        console.log(d);
                        // 返回对象可以自定义传参
                        var type = d.order[0].column === 6 ? 'create_time' :
                                    d.order[0].column === 5 ? 'good_reviews' :
                                        d.order[0].column === 4 ? 'info_op_diff' :
                                            d.order[0].column === 3 ? 'info_cost' : 'info_score';
                        if(app.typeId.id == '2'){
                            type = d.order[0].column === 6 ? 'create_time' :
                                    d.order[0].column === 5 ? 'info_op_diff' :
                                        d.order[0].column === 4 ? 'info_cost' :
                                            d.order[0].column === 3 ? 'info_disturb_width' : 'info_score';
                        }
                        var data = {
                            page: parseInt(d.start / 50, 10) + 1,
                            pageSize: 50,
                            type: type,
                            sort: d.order[0].dir
                        };
                       
                        //等分和通关时间排序
                        if(app.typeId && app.typeId.id == '2' && data.type =='info_score' && app.checkpoint.area_id != '3'){
                            data.type = 'info_pass_time';
                        }
    
                        //存储排序方式
                        sort = d.order[0].column + '+' + d.order[0].dir;
                        updateStorage('sort');
    
                        return data;
                    }
                },
                "deferRender": true,
                "order": [order],
                "columnDefs": columnDefs
            });
            return temp;
        }
        var table1 = createTable('1');
        var table2 = createTable('2');
        window.spConfig = {table1: table1,table2:table2,table:table1};
        document.querySelector(`#ct_det2_paginate`).style.display="none";
        
    },
    team_recommen: function (url, page, pageSize, el, oldurl) {
        // 选择战场
        $('#_js_select_z1').selectFilter({
            callBack: function (val) {
                var title = $('#_js_select_z1 li.filter-selected a').attr('title');
                if (title && title !== '无尽深渊') {
                    window.location.href = oldurl
                }
            }
        });
        var that = this;
        var data = {};
        $('.team-recommen-tab').on('click', '.item-0 dt', function () {
            $('.team-recommen-tab .item-0').removeClass('on');
            $(this).parent().addClass('on');
            data.page = 1;
            data.pageSize = pageSize;
            data.typeTabA = $(this).parent().find('.item-00').find('dd').eq(0).data('p');
            data.typeTabB = $(this).data('t');
            that.getData(url, data, el);
        });
        $('.team-recommen-tab .item-0').on('click', '.item-00 dd', function () {
            //console.log($(this).data('p'), $(this).parents('.item-0').find('dt').data('t'))
            data.typeTabA = $(this).data('p');
            data.page = 1;
            data.pageSize = pageSize;
            data.typeTabB = $(this).parents('.item-0').find('dt').data('t');
            that.getData(url, data, el);
        });
        data.page = page;
        data.pageSize = pageSize;
        data.typeTabA = $('.team-recommen-tab .item-0.on').find('dt').data('t');
        data.typeTabB = $('.team-recommen-tab .item-0.on').find('dl dd').eq(0).data('p');
        that.getData(url, data, el);
        $("body").on('click', '.m-pagination  a', function () {
            var rel = $(this).attr("rel");
            if (rel) {
                data.page = rel;
                that.getData(url, data, el);
            }
        });
        that.c();
    },
    //获取数据
    getData(url, data, el, cb, typ) {
        var pagebool = 0;
        var that = this;
        $.ajax({
            type: 'get',
            url: url,
            data: data,
            dataType: 'json',
            beforeSend: function () {
                $(el).parent().find(".loading").show();
            },
            success: function (json) {
                $(el).parent().find(".loading").hide();
                $(el).empty();

                that.total = json.total; //总记录数
                if (!that.total) {
                    $('.m-pagination').html('');
                    if (typ === 'armsinitS') {
                        return alert('没有搜到，请输出正确的武器名称')
                    } else if (typ === '_js_article_search') {
                        $('.loading').hide()
                        $('.s_error').find('p').html('没有找到符合条件的资讯!');
                        $('.s_error').show();
                    }
                }
                //that.pageSize = json.pageSize; //每页显示条数
                that.curPage = json.page; //当前页
                that.totalPage = json.totalPage; //总页数
                that.render('tpl', el, json.data);
                pagebool = json.page;
            },
            complete: function () { //生成分页条
                if (pagebool > 0) {
                    that.getPageBar(el);
                    cb && cb()
                }
            },
            error: function () {
                if (typ === '_js_article_search') {
                    $('.loading').hide()
                    $('.s_error').find('p').html('没有找到符合条件的资讯!');
                    $('.s_error').show();
                } else {
                    alert("数据加载失败");
                }

            }
        });
    },
    //获取分页条
    getPageBar(el) {
        var that = this;
        //页码大于最大页数
        if (that.curPage > that.totalPage) that.curPage = that.totalPage;
        //页码小于1
        if (that.curPage < 1) that.curPage = 1;
        pageStr = "<span class='count'>共" + that.total + "条" + that.curPage + "/" + that.totalPage + "</span>";

        //如果是第一页
        if (that.totalPage <= 4) {
            if (that.curPage == 1) {
                pageStr += "<span class='cur'>1</span>";
                for (var i = 2; i <= that.totalPage; i++) {
                    pageStr += "<a href='javascript:void(0)' class='pi' rel='" + i + "'>" + i + "</a>";
                }
            } else {
                pageStr += "<a href='javascript:void(0)' class='pi' rel='1'>首页</a><a href='javascript:void(0)' class='pi' rel='" + (that.curPage - 1) + "'>上一页</a>";
                for (var i = 1; i <= that.totalPage; i++) {
                    if (i == that.curPage) {
                        pageStr += "<span class='cur'>" + i + "</span>"
                    }
                    else {
                        pageStr += "<a href='javascript:void(0)' class='pi' rel='" + i + "'>" + i + "</a>";
                    }
                }

            }
        }
        else//当页数大于5的时候就要这样显示1 2 3 4 ...
        {
            if (that.curPage <= 3) {
                if (that.curPage == 1) {
                    pageStr += "<span class='cur'>1</span>";
                }
                else {
                    pageStr += "<a href='javascript:void(0)' class='pi' rel='1'>首页</a><a href='javascript:void(0)' class='pi' rel='" + (that.curPage - 1) + "'>上一页</a>";
                    pageStr += "<a href='javascript:void(0)' class='pi' rel='1'>1</a>";
                }
                for (var i = 2; i <= 4; i++) {
                    if (i == that.curPage) {
                        pageStr += "<span class='cur'>" + i + "</span>"
                    }
                    else {
                        pageStr += "<a class='pi' href='javascript:void(0)' rel='" + i + "'>" + i + "</a>";
                    }
                }
                pageStr += "<span class='cur1'>...</span>";
            } else {
                pageStr += "<a href='javascript:void(0)' class='pi' rel='1'>首页</a><a href='javascript:void(0)' class='pi' rel='" + (that.curPage - 1) + "'>上一页</a>";
                pageStr += "<span class='cur1'>...</span>";
                if (that.curPage > that.totalPage - 2) {
                    for (var i = that.totalPage - 2; i <= that.totalPage; i++) {
                        if (i == that.curPage) {
                            pageStr += "<span class='cur'>" + i + "</span>"
                        }
                        else {
                            pageStr += "<a class='pi' href='javascript:void(0)' rel='" + i + "'>" + i + "</a>";
                        }
                    }
                }
                else {
                    pageStr += "<a class='pi' href='javascript:void(0)' rel='" + (that.curPage - 1) + "'>" + (that.curPage - 1) + "</a>";
                    pageStr += "<span class='cur'>" + that.curPage + "</span>";
                    pageStr += "<a class='pi' href='javascript:void(0)' rel='" + (parseInt(that.curPage) + 1) + "'>" + (parseInt(that.curPage) + 1) + "</a>";
                    pageStr += "<span class='cur1'>...</span>";
                }
            }
        }
        //如果是最后页
        if (that.curPage >= that.totalPage) {
            pageStr += "<span>下一页</span>   <span>最后一页</span>";
        } else {
            pageStr += "<a href='javascript:void(0)' class='pi' rel='" + (parseInt(that.curPage) + 1) + "'>下一页</a><a href='javascript:void(0)' class='pi' rel='" + that.totalPage + "'>最后一页</a>";
        }

        $(el).parent().find(".m-pagination").html(pageStr);
    },
    personalFn: function () {
        var that = this;
        that.c();
        $('.itemA').on('click', '.itemDel', function () {
            var that = $(this);
            that.hide().parent().find('.itemDelBox').show();
        });
        $('.itemA').on('click', '.itemDelA', function () {
            var that = $(this);
            // ajax 成功以后  可以删除我的舰队招募 获取 id
            /*
                $.ajax({
                    url: '',
                    type:'post',
                    data:{id:$(this).data('id')},
                    dataType:'json',
                    success:function(){}
                })
            */
            that.parents('li').remove();
        });
        $('.itemA').on('click', '.itemDelB', function () {
            var that = $(this);
            that.parents('li').find('.itemDel').show();
            that.parent().hide();
        });
        $('.personalCenterBox .itemA').on('click', '.item-3', function () {
            var that = $(this);
            that.addClass('close');
            that.parents('.itemA').find('.itemB').show();
        })
    },
    getQueryVariable: function (variable) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) {
                return pair[1];
            }
        }
        return (0);
    }
}
